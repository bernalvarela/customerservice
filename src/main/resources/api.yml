openapi: 3.0.3
info:
  title: Customers - OpenAPI 3.0
  description: |-
    Customers API Spec
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
paths:
  /customers:
    post:
      tags:
        - customer
      summary: Add a new customer
      description: Add a new customer
      operationId: addCustomer
      requestBody:
        description: Create a new customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
    get:
      tags:
        - customers
      summary: Get all customers
      description: Get all customers
      operationId: getCustomers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request
  /customers/{id}':
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get customer by id
      description: Get a customer by id
      operationId: getCustomer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: id not found
    delete:
      summary: Delete customers by id
      description: Delete a customer by id
      operationId: deleteCustomer
      responses:
        '204':
          description: Deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized
    put:
      tags:
        - customer
      summary: Update a customer
      description: Update a customer
      operationId: updateCustomer
      requestBody:
        description: Update a customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
  /users:
    post:
      tags:
        - user
      summary: Add a new user
      description: Add a new user
      operationId: addUser
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
        '409':
            description: Conflict
    get:
      tags:
        - users
      summary: Get all users
      description: Get all users
      operationId: getUsers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
  /users/{id}':
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get user by id
      description: Get an user by id
      operationId: getUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: id not found
    delete:
      summary: Delete users by id
      description: Delete a user by id
      operationId: deleteUser
      responses:
        '204':
          description: Deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized
    put:
      tags:
        - update
      summary: Update a user
      description: Update a user
      operationId: updateUser
      requestBody:
        description: Update a user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: John
        surname:
          type: string
          example: Stamos
        photo:
          type: string
          example: image_path/image_name.png
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: John
        surname:
          type: string
          example: Stamos
        username:
          type: string
          example: john_s
        admin:
          type: boolean
          example: true